name: Full spikeinterface tests codecov

on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"  # Daily at noon UTC

env:
  KACHERY_CLOUD_CLIENT_ID: ${{ secrets.KACHERY_CLOUD_CLIENT_ID }}
  KACHERY_CLOUD_PRIVATE_KEY: ${{ secrets.KACHERY_CLOUD_PRIVATE_KEY }}

jobs:
  full-tests-with-codecov:
    name: Codecov in Ubuntu
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # "macos-latest", "windows-latest"
        os: ["ubuntu-latest", ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Get ephy_testing_data current head hash
        # the key depends on the last comit repo https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git
        id: vars
        run: |
          echo "HASH_EPHY_DATASET=$(git ls-remote https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git HEAD | cut -f1)" >> $GITHUB_OUTPUT
      - name: Restore cached gin data for extractors tests
        uses: actions/cache/restore@v4
        id: cache-datasets
        env:
          # the key depends on the last comit repo https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git
          HASH_EPHY_DATASET: git ls-remote https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git HEAD | cut -f1
        with:
          path: ~/spikeinterface_datasets
          key: ${{ runner.os }}-datasets-${{ steps.vars.outputs.HASH_EPHY_DATASET }}
          restore-keys: ${{ runner.os }}-datasets
      - name: Install packages
        uses: ./.github/actions/build-test-environment
      - name: run tests
        env:
          HDF5_PLUGIN_PATH: ${{ github.workspace }}/hdf5_plugin_path_maxwell
        run: |
          source ${{ github.workspace }}/test_env/bin/activate
          pytest -m "not sorters_external" --cov=./ --cov-report xml:./coverage.xml -vv -ra --durations=0 | tee report_full.txt; test ${PIPESTATUS[0]} -eq 0 || exit 1
          echo "# Timing profile of full tests" >> $GITHUB_STEP_SUMMARY
          python ./.github/scripts/build_job_summary.py report_full.txt >> $GITHUB_STEP_SUMMARY
          cat $GITHUB_STEP_SUMMARY
          rm report_full.txt
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          file: ./coverage.xml
          flags: unittests
