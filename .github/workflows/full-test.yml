name: Full spikeinterface tests

on:
  pull_request:
    branches: [master]
    types: [synchronize, opened, reopened, ready_for_review]

jobs:
  build-and-test:
    name: Test on (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # "macos-latest", "windows-latest"
        os: ["ubuntu-latest", ]
    steps:
      - uses: actions/checkout@v2
        with:
          python-version: 3.9
      - name: Get current year-month
        id: date
        run: echo "::set-output name=date::$(date+'%Y-%m')"
      - name: Install package with all test dependencies
        run: |
          sudo apt update

          # this is for datalad and download testing datasets
          sudo apt install git git-annex
          # needed for correct operation of git/git-annex/DataLad
          git config --global user.email "CI@example.com"
          git config --global user.name "CI Almighty"

          # this is for spyking circus
          sudo apt install mpich libmpich-dev

          # poetry for installing package
          curl -sSL https://install.python-poetry.org | python -

          # Install package with test extras on poetry-generated environment
          poetry install -E test
      - name: Show installed packages
        run:
          poetry show
      - name: Get ephy_testing_data current head hash
        # the key depend on the last commit repo https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git
        id: vars
        run:
          echo "::set-output name=HASH_EPHY_DATASET::$(git ls-remote https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git HEAD | cut -f1)"
      - uses: actions/cache@v2
        id: cache-datasets
        env:
          # the key depend on the last commit repo https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git
          HASH_EPHY_DATASET: git ls-remote https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git HEAD | cut -f1
        with:
          path: ~/spikeinterface_datasets
          key: ${{ runner.os }}-datasets-${{ steps.vars.outputs.HASH_EPHY_DATASET }}
          restore-keys: |
            ${{ runner.os }}-datasets
      - name: Test with pytest
        run: |
          poetry run pytest